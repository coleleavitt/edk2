Subject: [PATCH] disable smbios table
---
Index: OvmfPkg/SmbiosPlatformDxe/SmbiosPlatformDxe.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OvmfPkg/SmbiosPlatformDxe/SmbiosPlatformDxe.c b/OvmfPkg/SmbiosPlatformDxe/SmbiosPlatformDxe.c
--- a/OvmfPkg/SmbiosPlatformDxe/SmbiosPlatformDxe.c	(revision f9408b7cc160030c3bb9627c8086a792cc2d046c)
+++ b/OvmfPkg/SmbiosPlatformDxe/SmbiosPlatformDxe.c	(date 1749744080699)
@@ -38,9 +38,15 @@
   },
   {      // BIOSCharacteristicsExtensionBytes[2]
     0,   // BiosReserved
-    0x1C // SystemReserved = VirtualMachineSupported |
-    //                  UefiSpecificationSupported |
-    //                  TargetContentDistributionEnabled
+    //
+    // SystemReserved:
+    // - UefiSpecificationSupported (Bit 4)
+    // - TargetContentDistributionEnabled (Bit 3)
+    //
+    // The VirtualMachineSupported flag (Bit 2) has been deliberately
+    // cleared to bypass VM detection mechanisms. Original value was 0x1C.
+    //
+    0x18
   },
   0,     // UINT8                     SystemBiosMajorRelease
   0,     // UINT8                     SystemBiosMinorRelease
@@ -191,4 +197,4 @@
   }
 
   return EFI_SUCCESS;
-}
+}
\ No newline at end of file
Index: OvmfPkg/SmbiosPlatformDxe/Qemu.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OvmfPkg/SmbiosPlatformDxe/Qemu.c b/OvmfPkg/SmbiosPlatformDxe/Qemu.c
--- a/OvmfPkg/SmbiosPlatformDxe/Qemu.c	(revision f9408b7cc160030c3bb9627c8086a792cc2d046c)
+++ b/OvmfPkg/SmbiosPlatformDxe/Qemu.c	(date 1749743899761)
@@ -1,20 +1,32 @@
 /** @file
-  Find and extract QEMU SMBIOS data from fw_cfg.
+Find and extract QEMU SMBIOS data from fw_cfg.
 
+  This file has been modified to disable SMBIOS table loading from QEMU
+  in order to bypass Virtual Machine detection mechanisms.
+
   Copyright (C) 2014, Gabriel L. Somlo <somlo@cmu.edu>
 
   SPDX-License-Identifier: BSD-2-Clause-Patent
 **/
 
-#include <Library/DebugLib.h>            // ASSERT_EFI_ERROR()
-#include <Library/MemoryAllocationLib.h> // AllocatePool()
-#include <Library/PcdLib.h>              // PcdGetBool()
-#include <Library/QemuFwCfgLib.h>        // QemuFwCfgFindFile()
+#include <Library/DebugLib.h>
+#include <Library/MemoryAllocationLib.h>
+#include <Library/PcdLib.h>
+#include <Library/QemuFwCfgLib.h>
 
 /**
-  Locates and extracts the QEMU SMBIOS data if present in fw_cfg
+  Locates and extracts the QEMU SMBIOS data if present in fw_cfg.
+
+  This function is intentionally neutralized to always return NULL. This
+  prevents the firmware from using the default SMBIOS tables provided by
+  QEMU, which contain obvious virtualization signatures (e.g., "QEMU",
+  "Standard PC").
 
-  @return                 Address of extracted QEMU SMBIOS data
+  By returning NULL, we force the calling driver (SmbiosPlatformDxe) to
+  generate its own SMBIOS tables using PCD values, which we can control
+  to present a more realistic, non-virtualized hardware profile.
+
+  @return    Always returns NULL.
 
 **/
 UINT8 *
@@ -22,30 +34,9 @@
   VOID
   )
 {
-  EFI_STATUS            Status;
-  FIRMWARE_CONFIG_ITEM  Tables;
-  UINTN                 TablesSize;
-  UINT8                 *QemuTables;
-
-  if (!PcdGetBool (PcdQemuSmbiosValidated)) {
-    return NULL;
-  }
-
-  Status = QemuFwCfgFindFile (
-             "etc/smbios/smbios-tables",
-             &Tables,
-             &TablesSize
-             );
-  ASSERT_EFI_ERROR (Status);
-  ASSERT (TablesSize > 0);
-
-  QemuTables = AllocatePool (TablesSize);
-  if (QemuTables == NULL) {
-    return NULL;
-  }
-
-  QemuFwCfgSelectItem (Tables);
-  QemuFwCfgReadBytes (TablesSize, QemuTables);
-
-  return QemuTables;
-}
+  //
+  // Forcefully disable loading of SMBIOS tables from QEMU fw_cfg.
+  // This is a deliberate modification to bypass VM detection.
+  //
+  return NULL;
+}
\ No newline at end of file
Index: OvmfPkg/OvmfPkgX64.dsc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OvmfPkg/OvmfPkgX64.dsc b/OvmfPkg/OvmfPkgX64.dsc
--- a/OvmfPkg/OvmfPkgX64.dsc	(revision f9408b7cc160030c3bb9627c8086a792cc2d046c)
+++ b/OvmfPkg/OvmfPkgX64.dsc	(date 1749745236267)
@@ -513,6 +513,16 @@
 [PcdsFixedAtBuild]
   gEfiMdeModulePkgTokenSpaceGuid.PcdStatusCodeMemorySize|1
 !if $(SMM_REQUIRE) == FALSE
+  #
+  # SMBIOS Spoofing: Override default EDK II / QEMU values with realistic ones
+  # to bypass Virtual Machine detection. These values are used by the fallback
+  # mechanism in SmbiosPlatformDxe.c when QEMU's tables are disabled.
+  #
+  gEfiMdeModulePkgTokenSpaceGuid.PcdFirmwareVendor|L"Dell Inc."
+  gEfiMdeModulePkgTokenSpaceGuid.PcdSystemManufacturer|L"Dell Inc."
+  gEfiMdeModulePkgTokenSpaceGuid.PcdSystemProductName|L"PowerEdge R740"
+  gEfiMdeModulePkgTokenSpaceGuid.PcdSystemSerialNumber|L"H91T5G2"
+  gEfiMdeModulePkgTokenSpaceGuid.PcdSystemSkuNumber|L"SKU-12345"
   gEfiMdeModulePkgTokenSpaceGuid.PcdResetOnMemoryTypeInformationChange|FALSE
 !endif
   gEfiMdePkgTokenSpaceGuid.PcdMaximumGuidedExtractHandler|0x10
